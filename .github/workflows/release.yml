name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Package and publish (macOS)
      if: matrix.os == 'macos-latest'
      run: npm run dist:mac
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CSC_IDENTITY_AUTO_DISCOVERY: false
        
    - name: Package and publish (Windows)
      if: matrix.os == 'windows-latest'
      run: npm run dist:win
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Package and publish (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: npm run dist:linux
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    name: Create GitHub Release
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Changes in this Release
          - Automated release created from tag ${{ github.ref }}
          
          ## Downloads
          Choose the appropriate download for your platform:
          - **macOS**: `.dmg` or `.zip` files
          - **Windows**: `.exe` installer or portable `.zip`
          - **Linux**: `.AppImage` (universal) or `.deb` (Debian/Ubuntu)
          
        draft: false
        prerelease: false 